{"ast":null,"code":"var _jsxFileName = \"/Users/leo/Desktop/Show-Pin-on-Map/src/components/Select.jsx\";\nimport React from 'react';\nimport Map from \"./Map\";\nimport { useState } from 'react';\nimport Geocode from 'react-geocode';\nimport './form.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class Select extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = event => {\n      /*#__PURE__*/\n      _jsxDEV(Map, {\n        location: {\n          city: event.target.value\n        } + {\n          addrs: event.target.value\n        } + {\n          building: event.target.value\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 5\n      }, this);\n\n      console.log(\"clicked\");\n    };\n\n    this.resetText = event => {\n      console.log(\"reset !\");\n      this.state.prefecture = ' ';\n      this.state.city = ' ';\n      this.state.addrs = ' ';\n      this.state.building = ' ';\n      this.setState({\n        prefecture: event.target.value\n      });\n      this.setState({\n        city: event.target.value\n      });\n      this.setState({\n        addrs: event.target.value\n      });\n      this.setState({\n        building: event.target.value\n      }); //this.setState();\n    };\n\n    this.onChangeAddress = event => {\n      alert(\"Change to  \" + this.state.prefecture + \" \" + this.state.city + \" \" + this.state.addrs + \" \" + this.state.building);\n    };\n\n    this.onTextAreaChange = event => {\n      this.setState({\n        city: event.target.value\n      });\n    };\n\n    this.onAddrsChange = event => {\n      this.setState({\n        addrs: event.target.value\n      });\n    };\n\n    this.onBuildingChange = event => {\n      this.setState({\n        building: event.target.value\n      });\n    };\n\n    this.state = {\n      prefecture: 'Tokyo',\n      city: 'Shibuya',\n      addrs: 'ekimae',\n      building: ''\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.onTextAreaChange = this.onTextAreaChange.bind(this);\n    this.onAddrsChange = this.onAddrsChange.bind(this);\n    this.onBuildingChange = this.onBuildingChange.bind(this);\n    this.resetText = this.resetText.bind(this);\n  }\n\n  onChange(e) {\n    console.log(e.target.value); // this.setState({ prefecture: e.target.value});\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    console.log(\"onSubmit\");\n    console.log(this.state);\n    return /*#__PURE__*/_jsxDEV(Map, {\n      location: this.state.city + this.state.addrs + this.state.building\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }, this);\n  }\n\n  render() {\n    const toSend = this.state;\n    var states = [{\n      label: \"北海道\",\n      value: \"hokkaido\"\n    }, {\n      label: \"青森県\",\n      value: \"aomori\"\n    }, {\n      label: \"岩手県\",\n      value: \"iwate\"\n    }, {\n      label: \"宮城県\",\n      value: \"miyagi\"\n    }, {\n      label: \"秋田県\",\n      value: \"akita\"\n    }, {\n      label: \"山形県\",\n      value: \"yamagata\"\n    }, {\n      label: \"福島県\",\n      value: \"fukushima\"\n    }, {\n      label: \"茨城県\",\n      value: \"ibaraki\"\n    }, {\n      label: \"栃木県\",\n      value: \"tochigi\"\n    }, {\n      label: \"群馬県\",\n      value: \"gunma\"\n    }, {\n      label: \"埼玉県\",\n      value: \"saitama\"\n    }, {\n      label: \"千葉県\",\n      value: \"chiba\"\n    }, {\n      label: \"東京都\",\n      value: \"tokyo\"\n    }, {\n      label: \"神奈川県\",\n      value: \"kanagawa\"\n    }, {\n      label: \"新潟県\",\n      value: \"niigata\"\n    }, {\n      label: \"富山県\",\n      value: \"toyama\"\n    }, {\n      label: \"石川県\",\n      value: \"ishikawa\"\n    }, {\n      label: \"福井県\",\n      value: \"fukui\"\n    }, {\n      label: \"山梨県\",\n      value: \"yamanashi\"\n    }, {\n      label: \"長野県\",\n      value: \"nagano\"\n    }, {\n      label: \"岐阜県\",\n      value: \"gifu\"\n    }, {\n      label: \"静岡県\",\n      value: \"shizuoka\"\n    }, {\n      label: \"愛知県\",\n      value: \"aichi\"\n    }, {\n      label: \"三重県\",\n      value: \"mie\"\n    }, {\n      label: \"滋賀県\",\n      value: \"shiga\"\n    }, {\n      label: \"京都府\",\n      value: \"kyoto\"\n    }, {\n      label: \"大阪府\",\n      value: \"osaka\"\n    }, {\n      label: \"兵庫県\",\n      value: \"hyogo\"\n    }, {\n      label: \"奈良県\",\n      value: \"nara\"\n    }, {\n      label: \"和歌山県\",\n      value: \"wakayama\"\n    }, {\n      label: \"鳥取県\",\n      value: \"tottori\"\n    }, {\n      label: \"島根県\",\n      value: \"shimane\"\n    }, {\n      label: \"岡山県\",\n      value: \"okayama\"\n    }, {\n      label: \"広島県\",\n      value: \"hiroshima\"\n    }, {\n      label: \"山口県\",\n      value: \"yamaguchi\"\n    }, {\n      label: \"徳島県\",\n      value: \"tokushima\"\n    }, {\n      label: \"香川県\",\n      value: \"kagawa\"\n    }, {\n      label: \"愛媛県\",\n      value: \"ehime\"\n    }, {\n      label: \"高知県\",\n      value: \"kochi\"\n    }, {\n      label: \"福岡県\",\n      value: \"fukuoka\"\n    }, {\n      label: \"佐賀県\",\n      value: \"saga\"\n    }, {\n      label: \"長崎県\",\n      value: \"nagasaki\"\n    }, {\n      label: \"熊本県\",\n      value: \"kumamoto\"\n    }, {\n      label: \"大分県\",\n      value: \"oita\"\n    }, {\n      label: \"宮崎県\",\n      value: \"miyazaki\"\n    }, {\n      label: \"鹿児島県\",\n      value: \"kagoshima\"\n    }, {\n      label: \"沖縄県\",\n      value: \"okinawa\"\n    }];\n    var options = states.map(n => /*#__PURE__*/_jsxDEV(\"option\", {\n      value: n.value,\n      children: n.label\n    }, n.label, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }, this));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.onSubmit,\n        className: \"form-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"menu-text\",\n            children: \"Prefecture\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"drop-list\",\n            value: this.state.prefecture,\n            onChange: this.onChange,\n            children: options\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"menu-text\",\n            children: \"City\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"\\u5E02\\u753A\\u6751\",\n            className: \"address-box\",\n            type: \"text\",\n            value: this.state.value,\n            onChange: this.onTextAreaChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"menu-text\",\n            children: \"Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"\\u756A\\u5730\",\n            className: \"address-box\",\n            type: \"text\",\n            value: this.state.value,\n            onChange: this.onAddrsChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"menu-text\",\n            children: \"Building and other\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"\\u30D3\\u30EB\\u540D\",\n            className: \"address-box\",\n            type: \"text\",\n            value: this.state.value,\n            onChange: this.onBuildingChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"send-btn\",\n            type: \"submit\" // onClick = {() => setBtnClick(true)}\n            ,\n            onClick: this.handleClick,\n            children: \"Show on Map !\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"cncl-btn\",\n            type: \"submit\",\n            onClick: this.resetText,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"change-btn\",\n            type: \"submit\",\n            onClick: this.onChangeAddress,\n            children: \"Change !\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), \",\", /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [this.state.prefecture + ' ' + this.state.city + ' ' + this.state.addrs + ' ' + this.state.building, /*#__PURE__*/_jsxDEV(Map, {\n            location: this.state.city + ' ' + this.state.addrs + ' ' + this.state.building\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this);\n  }\n\n}\nexport default Select; //this.state.label + ' ' +","map":{"version":3,"sources":["/Users/leo/Desktop/Show-Pin-on-Map/src/components/Select.jsx"],"names":["React","Map","useState","Geocode","Select","Component","constructor","props","handleClick","event","city","target","value","addrs","building","console","log","resetText","state","prefecture","setState","onChangeAddress","alert","onTextAreaChange","onAddrsChange","onBuildingChange","onChange","bind","onSubmit","e","preventDefault","render","toSend","states","label","options","map","n"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Map from \"./Map\";\nimport { useState } from 'react';\nimport Geocode from 'react-geocode';\nimport './form.css'\n\n\n \nexport class Select extends React.Component {\n  \n  constructor(props){\n    super(props);\n    this.state = {\n      prefecture: 'Tokyo',\n      city: 'Shibuya', \n      addrs: 'ekimae',\n      building: ''\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.onTextAreaChange = this.onTextAreaChange.bind(this);\n    this.onAddrsChange = this.onAddrsChange.bind(this);\n    this.onBuildingChange = this.onBuildingChange.bind(this);\n    this.resetText = this.resetText.bind(this);\n  }\n\n  onChange(e){\n    console.log(e.target.value);\n    // this.setState({ prefecture: e.target.value});\n    \n  }\n\n  handleClick = (event) =>{\n    <Map location = {{ city: event.target.value } + { addrs: event.target.value } + { building: event.target.value }}/>\n    console.log(\"clicked\");\n    \n  }\n\n  resetText = (event)=>{\n    console.log(\"reset !\")\n    this.state.prefecture = ' ';\n    this.state.city = ' ';\n    this.state.addrs = ' ';\n    this.state.building = ' ';\n    this.setState({prefecture: event.target.value});\n    this.setState({ city: event.target.value });\n    this.setState({ addrs: event.target.value });\n    this.setState({ building: event.target.value });\n    //this.setState();\n  }\n\n  onSubmit(e){\n    e.preventDefault();\n    console.log(\"onSubmit\");\n    console.log(this.state);\n    return(\n    <Map location = {this.state.city + this.state.addrs + this.state.building}/> \n    );\n  }\n\n  onChangeAddress = (event) => {\n    alert(\"Change to  \" + this.state.prefecture  + \" \" + this.state.city + \" \" + this.state.addrs + \" \" + this.state.building );\n  }\n\n  onTextAreaChange = (event) =>{\n    this.setState({ city: event.target.value });\n  }\n\n  onAddrsChange = (event)=>{\n    this.setState({ addrs: event.target.value });\n  }\n\n  onBuildingChange = (event) =>{\n    this.setState({ building: event.target.value });\n  }\n\n  render() {\n    const toSend = (this.state);\n    var states = [\n      {label: \"北海道\", value: \"hokkaido\" },\n      {label: \"青森県\", value: \"aomori\" },\n      {label: \"岩手県\", value: \"iwate\" },\n      {label: \"宮城県\", value: \"miyagi\" },\n      {label: \"秋田県\", value: \"akita\" },\n      {label: \"山形県\", value: \"yamagata\" },\n      {label: \"福島県\", value: \"fukushima\" },\n      {label: \"茨城県\", value: \"ibaraki\" },\n      {label: \"栃木県\", value: \"tochigi\" },\n      {label: \"群馬県\", value: \"gunma\" },\n      {label: \"埼玉県\", value: \"saitama\" },\n      {label: \"千葉県\", value: \"chiba\" },\n      {label: \"東京都\", value: \"tokyo\" },\n      {label: \"神奈川県\", value: \"kanagawa\" },\n      {label: \"新潟県\", value: \"niigata\" },\n      {label: \"富山県\", value: \"toyama\" },\n      {label: \"石川県\", value: \"ishikawa\" },\n      {label: \"福井県\", value: \"fukui\" },\n      {label: \"山梨県\", value: \"yamanashi\" },\n      {label: \"長野県\", value: \"nagano\" },\n      {label: \"岐阜県\", value: \"gifu\" },\n      {label: \"静岡県\", value: \"shizuoka\" },\n      {label: \"愛知県\", value: \"aichi\" },\n      {label: \"三重県\", value: \"mie\" },\n      {label: \"滋賀県\", value: \"shiga\" },\n      {label: \"京都府\", value: \"kyoto\" },\n      {label: \"大阪府\", value: \"osaka\" },\n      {label: \"兵庫県\", value: \"hyogo\" },\n      {label: \"奈良県\", value: \"nara\" },\n      {label: \"和歌山県\", value: \"wakayama\" },\n      {label: \"鳥取県\", value: \"tottori\" },\n      {label: \"島根県\", value: \"shimane\" },\n      {label: \"岡山県\", value: \"okayama\" },\n      {label: \"広島県\", value: \"hiroshima\" },\n      {label: \"山口県\", value: \"yamaguchi\" },\n      {label: \"徳島県\", value: \"tokushima\" },\n      {label: \"香川県\", value: \"kagawa\" },\n      {label: \"愛媛県\", value: \"ehime\" },\n      {label: \"高知県\", value: \"kochi\" },\n      {label: \"福岡県\", value: \"fukuoka\" },\n      {label: \"佐賀県\", value: \"saga\" },\n      {label: \"長崎県\", value: \"nagasaki\" },\n      {label: \"熊本県\", value: \"kumamoto\" },\n      {label: \"大分県\", value: \"oita\" },\n      {label: \"宮崎県\", value: \"miyazaki\" },\n      {label: \"鹿児島県\", value: \"kagoshima\" },\n      {label: \"沖縄県\", value: \"okinawa\" }\n    ];\n    \n    var options = states.map(\n      (n)=>(\n        <option key={n.label} value={n.value}>\n          {n.label}\n        </option>\n      )\n    );\n\n    return (\n      <div >\n        <form onSubmit={this.onSubmit} className = 'form-box'>\n          <div>\n            <h3 className = 'menu-text'>\n              Prefecture\n            </h3>\n            <select　\n              className = \"drop-list\"\n              value={this.state.prefecture}\n              onChange={this.onChange}>\n              {options}\n            </select>\n          </div>\n          \n          <div>\n          <h3 className = 'menu-text'>\n              City\n            </h3>\n            <input \n              placeholder = \"市町村\"\n              className = \"address-box\"\n              type = 'text'\n              value = {this.state.value}\n              onChange={this.onTextAreaChange}\n            />\n            <br></br>\n            <h3 className = 'menu-text'>\n              Address\n            </h3>\n            <input \n              placeholder = \"番地\"\n              className = \"address-box\"\n              type = 'text'\n              value = {this.state.value}\n              onChange={this.onAddrsChange}\n            />\n            <br></br>\n            <h3 className = 'menu-text'>\n              Building and other\n            </h3>\n            <input \n              placeholder = \"ビル名\"\n              className = \"address-box\"\n              type = 'text'\n              value = {this.state.value}\n              onChange={this.onBuildingChange}\n            />\n          </div>\n          <div>\n            <button\n              className = \"send-btn\"\n              type=\"submit\"\n              // onClick = {() => setBtnClick(true)}\n              onClick = {this.handleClick}\n              >\n                Show on Map !\n            </button>\n            <button\n              className = \"cncl-btn\"\n              type=\"submit\"\n              onClick = {this.resetText}\n              >\n                Cancel\n            </button>\n            <br></br>\n            <button\n              className = \"change-btn\"\n              type=\"submit\"\n              onClick = {this.onChangeAddress}\n              >\n                Change !\n            </button>\n          </div>\n          \n        </form>,\n        <div>\n        <h1>\n            {this.state.prefecture + ' ' + this.state.city + ' ' + this.state.addrs + ' ' + this.state.building}\n            <Map location = {this.state.city + ' ' + this.state.addrs + ' ' + this.state.building}/>\n\n          </h1>\n        </div>\n      </div>\n\n    );\n  }\n}\n\n\n\nexport default Select; \n\n//this.state.label + ' ' + "]},"metadata":{},"sourceType":"module"}