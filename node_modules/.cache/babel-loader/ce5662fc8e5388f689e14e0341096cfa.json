{"ast":null,"code":"var _jsxFileName = \"/Users/leo/Desktop/Show-Pin-on-Map/src/components/Map.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Geocode from 'react-geocode';\nimport { compose, lifecycle, withState } from 'recompose';\nimport { withScriptjs, withGoogleMap, GoogleMap, Marker } from 'react-google-maps';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst apiKey = \"AIzaSyDD_EyIVFiO-R51XzLDqZlF5824t3KFaAg\";\nconst MapWithAMakredInfoWindow = compose(withScriptjs, withGoogleMap)(({\n  lat,\n  lng\n}) => /*#__PURE__*/_jsxDEV(GoogleMap, {\n  defaultZoom: 15,\n  defaultCenter: {\n    lat,\n    lng\n  },\n  children: /*#__PURE__*/_jsxDEV(Marker, {\n    position: {\n      lat,\n      lng\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 25,\n  columnNumber: 3\n}, this));\nconst Map = compose(withState('geocode', 'setGeocode', {\n  lat: 0,\n  lng: 0\n}), lifecycle({\n  componentDidMount() {\n    Geocode.setApiKey(apiKey);\n    Geocode.fromAddress(this.props.location).then(response => {\n      const {\n        lat,\n        lng\n      } = response.results[0].geometry.location;\n      this.setState({\n        lat,\n        lng\n      });\n    }).catch(() => {\n      this.setState({\n        lat: undefined,\n        lng: undefined\n      });\n    });\n  }\n\n}))(({\n  lat,\n  lng,\n  location\n}) => {\n  if (!lat || !lng) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\u4F4F\\u6240\\u304C\\u8AA4\\u3063\\u3066\\u3044\\u307E\\u3059\\u3002\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"access-map-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(MapWithAMakredInfoWindow, {\n      googleMapURL: `https://maps.googleapis.com/maps/api/js?key=${apiKey}&v=3.exp&libraries=geometry,drawing,places`,\n      loadingElement: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          height: '100%'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 25\n      }, this),\n      containerElement: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          height: '30vmax'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 27\n      }, this),\n      mapElement: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          height: '100%'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }, this),\n      lat: lat,\n      lng: lng,\n      location: location\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), console.log(location), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: [location, \" \\u306E\\u7DEF\\u5EA6\\u3001\\u7D4C\\u5EA6: LAT:\", lat, \" LNG:\", lng]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n      href: `comgooglemaps://?daddr=${lat},${lng}`,\n      children: \"Open on Google Map\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n});\nMap.propTypes = {\n  location: PropTypes.string.isRequired\n};\nexport default Map;","map":{"version":3,"sources":["/Users/leo/Desktop/Show-Pin-on-Map/src/components/Map.jsx"],"names":["React","PropTypes","Geocode","compose","lifecycle","withState","withScriptjs","withGoogleMap","GoogleMap","Marker","apiKey","MapWithAMakredInfoWindow","lat","lng","Map","componentDidMount","setApiKey","fromAddress","props","location","then","response","results","geometry","setState","catch","undefined","height","console","log","propTypes","string","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Geocode from 'react-geocode';\nimport {\n  compose,\n  lifecycle,\n  withState,\n} from 'recompose';\nimport {\n  withScriptjs,\n  withGoogleMap,\n  GoogleMap,\n  Marker,\n} from 'react-google-maps';\n\nconst apiKey = \"AIzaSyDD_EyIVFiO-R51XzLDqZlF5824t3KFaAg\";\n\nconst MapWithAMakredInfoWindow = compose(\n  withScriptjs,\n  withGoogleMap,\n)(({\n  lat,\n  lng,\n}) => (\n  <GoogleMap\n    defaultZoom={15}\n    defaultCenter={{ lat, lng }}\n  >\n    <Marker position={{ lat, lng }} />\n  </GoogleMap>\n));\n\nconst Map = compose(\n  withState('geocode', 'setGeocode', { lat: 0, lng: 0 }),\n  lifecycle({\n    componentDidMount() {\n      Geocode.setApiKey(apiKey);\n      Geocode.fromAddress(this.props.location)\n        .then((response) => {\n          const { lat, lng } = response.results[0].geometry.location;\n          this.setState({\n            lat,\n            lng,\n          });\n        })\n        .catch(() => {\n          this.setState({\n            lat: undefined,\n            lng: undefined,\n          });\n        });\n    },\n  }),\n)(({\n  lat,\n  lng,\n  location,\n}) => {\n  if (!lat || !lng) {\n    return (\n      <div>\n        <p>住所が誤っています。</p>\n      </div>\n    );\n  }\n  return (\n    <div className=\"access-map-wrapper\">\n      <MapWithAMakredInfoWindow\n        googleMapURL={`https://maps.googleapis.com/maps/api/js?key=${apiKey}&v=3.exp&libraries=geometry,drawing,places`}\n        loadingElement={<div style={{ height: '100%' }} />}\n        containerElement={<div style={{ height: '30vmax' }} />}\n        mapElement={<div style={{ height: '100%' }} />}\n        lat={lat}\n        lng={lng}\n        location={location}\n      />\n      {console.log(location)}\n      <h4>\n      {location} の緯度、経度: LAT:{lat} LNG:{lng}  \n        </h4>\n      <a href={`comgooglemaps://?daddr=${lat},${lng}`}>\n        Open on Google Map\n      </a>\n    </div>\n  );\n});\n\nMap.propTypes = {\n  location: PropTypes.string.isRequired,\n};\n\nexport default Map;"]},"metadata":{},"sourceType":"module"}