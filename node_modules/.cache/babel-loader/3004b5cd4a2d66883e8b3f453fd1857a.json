{"ast":null,"code":"var _jsxFileName = \"/Users/leo/Desktop/Show-Pin-on-Map/src/components/Select.jsx\";\nimport React from 'react'; // import logo from './logo.svg';\n// import '.src/App.css';\n\nimport { Formik, Form as FormikForm, validateYupSchema } from 'formik';\nimport * as Yup from 'yup';\nimport { Form, FormGroup, Label, Input, FormFeedback, Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst prefs = [{\n  area: '選択してください',\n  name: '選択してください',\n  value: '選択してください'\n}, {\n  name: '東京',\n  value: '東京'\n}, {\n  name: '千葉',\n  value: '千葉'\n}, {\n  name: '大阪',\n  value: '大阪'\n}, {\n  name: '兵庫',\n  value: '兵庫'\n}, {\n  name: '北海道',\n  value: '北海道'\n}];\n\nclass Select extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      modalOpen: false,\n      hobbies: []\n    };\n\n    this.handleSubmit1 = values => {\n      alert(JSON.stringify(values));\n    };\n\n    this.handleSubmit2 = values => {\n      alert(JSON.stringify(values));\n    };\n\n    this.handleHobbyAdd = async hobby => {\n      const _hobbies = [...this.state.hobbies];\n\n      _hobbies.push(hobby);\n\n      await this.setState({\n        hobbies: _hobbies\n      });\n      this.handleModalClose();\n    };\n\n    this.handleModalClose = () => {\n      this.setState({\n        modalOpen: false\n      });\n    };\n\n    this.handleModalOpen = () => {\n      this.setState({\n        modalOpen: true\n      });\n    };\n\n    this.handleHobbyDelete = index => {\n      // alert(index);\n      const _hobbies = [...this.state.hobbies];\n\n      _hobbies.splice(index, 1);\n\n      this.setState({\n        hobbies: _hobbies\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"my-5 text-center\",\n        children: \"\\u52D5\\u7684\\u30D5\\u30A9\\u30FC\\u30E0\\u30C6\\u30B9\\u30C8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"my-4\",\n        children: \"\\u30A8\\u30EA\\u30A2\\u9078\\u629E\\u30D5\\u30A9\\u30FC\\u30E0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: {\n          area: '選択してください',\n          pref: '選択してください'\n        },\n        onSubmit: values => this.handleSubmit1(values),\n        validationSchema: Yup.object().shape({\n          area: Yup.string().notOneOf(['選択してください']),\n          pref: Yup.string().notOneOf(['選択してください'])\n        }),\n        children: ({\n          handleSubmit,\n          handleChange,\n          handleBlur,\n          values,\n          errors,\n          touched\n        }) => /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              children: \"\\u90FD\\u9053\\u5E9C\\u770C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"select\",\n              name: \"pref\",\n              value: values.pref,\n              onChange: handleChange,\n              onBlur: handleBlur,\n              invalid: Boolean(touched.pref && errors.pref),\n              children: prefs.filter(pref => pref.area === values.area || pref.area === '選択してください').map((pref, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: pref.value,\n                children: pref.name\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 49\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(FormFeedback, {\n              children: errors.pref\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              color: \"primary\",\n              children: \"\\u767B\\u9332\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Select;","map":{"version":3,"sources":["/Users/leo/Desktop/Show-Pin-on-Map/src/components/Select.jsx"],"names":["React","Formik","Form","FormikForm","validateYupSchema","Yup","FormGroup","Label","Input","FormFeedback","Button","Modal","ModalHeader","ModalBody","ModalFooter","prefs","area","name","value","Select","Component","state","modalOpen","hobbies","handleSubmit1","values","alert","JSON","stringify","handleSubmit2","handleHobbyAdd","hobby","_hobbies","push","setState","handleModalClose","handleModalOpen","handleHobbyDelete","index","splice","render","pref","object","shape","string","notOneOf","handleSubmit","handleChange","handleBlur","errors","touched","Boolean","filter","map"],"mappings":"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","sourcesContent":["import React from 'react';\n// import logo from './logo.svg';\n// import '.src/App.css';\n\nimport { Formik, Form as FormikForm, validateYupSchema } from 'formik';\nimport * as Yup from 'yup';\nimport {\n    Form,\n    FormGroup,\n    Label,\n    Input,\n    FormFeedback,\n    Button,\n    Modal,\n    ModalHeader,\n    ModalBody,\n    ModalFooter\n} from 'reactstrap';\n\n\n\nconst prefs = [\n    { area: '選択してください', name: '選択してください', value: '選択してください' },\n    {name: '東京', value: '東京' },\n    {name: '千葉', value: '千葉' },\n    { name: '大阪', value: '大阪' },\n    {  name: '兵庫', value: '兵庫' },\n    { name: '北海道', value: '北海道' },\n]\n\nclass Select extends React.Component {\n\n    state = {\n        modalOpen: false,\n        hobbies: [],\n    }\n\n    handleSubmit1 = (values) => {\n        alert(JSON.stringify(values));\n    }\n\n    handleSubmit2 = (values) => {\n        alert(JSON.stringify(values));\n    }\n\n    handleHobbyAdd = async (hobby) => {\n        const _hobbies = [...this.state.hobbies];\n        _hobbies.push(hobby);\n        await this.setState({ hobbies: _hobbies });\n        this.handleModalClose();\n    }\n\n    handleModalClose = () => {\n        this.setState({\n            modalOpen: false,\n        });\n    }\n\n    handleModalOpen = () => {\n        this.setState({\n            modalOpen: true,\n        });\n    }\n\n    handleHobbyDelete = (index) => {\n        // alert(index);\n        const _hobbies = [...this.state.hobbies];\n        _hobbies.splice(index, 1);\n        this.setState({ hobbies: _hobbies });\n    }\n\n    render() {\n        return (\n            <div className=\"container\">\n                <h3 className=\"my-5 text-center\">動的フォームテスト</h3>\n                <h4 className=\"my-4\">エリア選択フォーム</h4>\n                <Formik\n                    initialValues={{ area: '選択してください', pref: '選択してください' }}\n                    onSubmit={(values) => this.handleSubmit1(values)}\n                    validationSchema={Yup.object().shape({\n                        area: Yup.string().notOneOf(['選択してください']),\n                        pref: Yup.string().notOneOf(['選択してください']),\n                    })}\n                >\n                    {\n                        ({ handleSubmit, handleChange, handleBlur, values, errors, touched }) => (\n                            <Form onSubmit={handleSubmit}>\n                                <FormGroup>\n                                    <Label>都道府県</Label>\n                                    <Input\n                                        type=\"select\"\n                                        name=\"pref\"\n                                        value={values.pref}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                        invalid={Boolean(touched.pref && errors.pref)}\n                                    >\n                                        {\n                                            (prefs.filter(pref => pref.area === values.area || pref.area === '選択してください')).map((pref, index) => (\n                                                <option value={pref.value} key={index}>{pref.name}</option>\n                                            ))\n                                        }\n                                    </Input>\n                                    <FormFeedback>{errors.pref}</FormFeedback>\n                                </FormGroup>\n                                <div>\n                                    <Button type=\"submit\" color=\"primary\">登録</Button>\n                                </div>\n                            </Form>\n                        )\n                    }\n                </Formik>\n            </div>\n        );\n    }\n}\n\nexport default Select;"]},"metadata":{},"sourceType":"module"}